(defwindow sysinfo
  :monitor 1 ;; wayland users may need this
  :stacking "fg"
  :windowtype "normal"
  :namespace "eww-sysinfo"
  :geometry (geometry :width "30%" :height
               "30%" :anchor "center")
  (sysinfo_layout))

(defpoll time :interval "5s"
  :initial `date +'{"hour":"%H","min":"%M","day":"%d"}'`
  `date +'{"hour":"%H","min":"%M","day":"%d"}'`)
(defpoll net :interval "100s"
  :initial `N/A`
  `nmcli -t -f SIGNAL,ACTIVE device wifi \
    | awk -F':' '{if($2=="yes")print$1}'`)

(defwidget sysinfo_layout []
  (box :class "layout-box" :space-evenly false :orientation "vertical"
        :style "background-color:  rgba(30, 30, 46,0.7)"
       ; :style "background-image: url('./wallpaper')"

    (box :space-evenly false :hexpand false :vexpand true
      (box :spacing 15 :class "tm-box" :space-evenly false
            :valign "start" :halign "start"
        (label :text "󱑂")
        (label :text "${time.hour}:${time.min}")))
    (box :space-evenly false :hexpand false :vexpand true
      (box :spacing 15 :class "cal-box" :space-evenly false
            :valign "start" :halign "start"
        (label :text "󰸗")
        (calendar)))

    (box :valign "start" :space-evenly false :spacing 25
      (_battery :status {EWW_BATTERY.BAT0.status}
                :battery {EWW_BATTERY.BAT0.capacity}
                :full "󰁹" :charging "󰂄" :discharging "󰁺"
                ; :one "󰂅" :two "󰂋" :three "󰢞" :four "󰢝"
                ; :five "󰂈" :six "󰂇" :seven "󰢜"
                )
      (_network :strength net :offline "󰖪" :excellent "󰖩" :good "󱛃"
                :okay "󱚽" :slow "󱛂")
      (label :text "|" :class "sep")
      (button :onclick "eww close sysinfo" :class "close-btn" "󰖭"))
       ; (_buttons :shutdown "poweroff" :reboot "reboot"
       ;          :logout "loginctl kill-session self"
       ;          :shutdown_icon "󰐥" :reboot_icon "󰜉"
       ;          :logout_icon "󰍃")
                ))

(defwidget _battery [battery status full charging discharging]
                    ; one two three four five six seven charge
  (box :class "bat-box" :space-evenly false :spacing 8
    (label :text {status == 'Full' ? full + battery +"%" : ""})
    (label :text {status == 'Charging' ? charging + battery +"%" : ""})
    (label :class "red" :text {status == 'Discharging' ? discharging + battery +"%" : ""})
    ; (label :class "red" :text {battery +"%"})
    ))
       ; battery < 15 ? seven :
       ;  battery < 30 ? six :
       ;    battery < 45 ? five :
       ;      battery < 60 ? four :
       ;        battery < 75 ? three :
       ;          battery < 95 ? two : one
       ; })))

(defwidget _network [strength offline excellent
                    good okay slow]
  (box :class "net-box"
       :space-evenly false
       :spacing 8
    (label :text {strength == "" ? offline :
      strength < 26 ? slow :
        strength < 51 ? okay :
          strength < 76 ? good : excellent})))

(defwidget _buttons [shutdown shutdown_icon reboot
                    reboot_icon logout logout_icon]
  (box :class "btns-box" :spacing 5
       :vexpand true :hexpand true
       :valign "end" :halign "end"
       :space-evenly false
    (button :onclick shutdown shutdown_icon)
    (button :onclick reboot reboot_icon)
    (button :onclick logout logout_icon)))

; (defwidget _sundial []
;   (label :class "sundial-lbl" :halign "end" :hexpand true
;          :text {time.hour >= 2 && time.hour <= 4 ? "Early Morning" :
;                time.hour <= 5 ? "Dawn" :
;                time.hour >= 6
;                 && (time.hour <= 8 && time.min <= 59)
;                   ? "Morning" :
;                time.hour >= 9
;                  && (time.hour <= 11 && time.min <= 59)
;                    ? "Late Morning" :
;                time.hour == 12 && time.min <= 29
;                  ? "Midday" :
;                time.hour >= 12 && time.hour <= 16
;                  ? "Afternoon" :
;                time.hour > 16 && time.hour <= 17
;                  ? "Late Afternoon" :
;                (time.hour >= 17 && time.min <= 1)
;                  || (time.hour <= 18 && time.min <= 20)
;                    ? "Early Evening" :
;                time.hour >= 18 && time.hour <= 19
;                  ? "Dusk" :
;                time.hour > 19 && time.hour <= 21
;                  ? "Late Evening" :
;                time.hour > 21 ? "Night" : "Midnight"}))

;; vim:ft=yuck
